% 周期锯齿脉冲信号频谱分析
function  CTFS_JC
% 绘制并观察周期锯齿脉冲信号频谱特性
%     Nf：谐波的次数
% bn：第1,2,3,...次谐波正弦项系数
display('Please input the value of Nf ');
Nf = input('Nf = ');
bn = zeros(Nf+1,1);
cn = zeros(Nf+1,1);
bn(1) = 0;
for i = 1:Nf
    bn(i+1) = (-1)^(i+1)*1/(i*pi);                          % 计算系数bn
    cn(i+1) = abs(bn(i+1));                                 %计算幅度频谱
end
t = -5:0.01:5;
x = sawtooth(pi*(t+1));                                     %用sawtooth函数构造周期锯齿脉冲信号
subplot(211);
plot(t,x);
axis([-5 5 -1.5 1.5]);
title('周期锯齿脉冲信号','Fontsize',8);
xlabel('t   (单位:s)', 'Fontsize',8);
subplot(212);
k = 0:Nf;
stem(k,cn);
hold on;
plot(k,cn);
title('幅度频谱','Fontsize',8);
xlabel('谐波次数', 'Fontsize',8);
% End

--------------------------------------------------------------------------------------------------------------------------------

%Generate 10 periods of a sawtooth wave with a fundamental frequency of 50 Hz. The sample rate is 1 kHz.
clear
clc
close all
T = 10*(1/50);
Fs = 1000;
dt = 1/Fs;
t = 0:dt:T-dt; 
--------------------------------------------------------------------------------------------------------------------------------


%%%fft test
clc;
clear all;
close all;

fo = 4;   %frequency of the sine wave
Fs = 100; %sampling rate
Ts = 1/Fs; %sampling time interval
t = 0:Ts:1-Ts; %sampling period
n = length(t); %number of samples
y = 2*sin(2*pi*fo*t); %the sine curve
	
%plot the cosine curve in the time domain
sinePlot = figure;
plot(t,y)
xlabel('time (seconds)')
ylabel('y(t)')
title('Sample Sine Wave')
grid

% %plot the frequency spectrum using the MATLAB fft command
% matlabFFT = figure;  %create a new figure
% YfreqDomain = fft(y); %take the fft of our sin wave, y(t)
% 
% stem(abs(YfreqDomain));  %use abs command to get the magnitude
% %similary, we would use angle command to get the phase plot!
% %we'll discuss phase in another post though!
% 
% xlabel('Sample Number')
% ylabel('Amplitude')
% title('Using the Matlab fft command')
% grid
% axis([0,100,0,120])
% 
% [YfreqDomain,frequencyRange] = centeredFFT(y,Fs);
% centeredFFT = figure;
% 
% %remember to take the abs of YfreqDomain to get the magnitude!
% stem(frequencyRange,abs(YfreqDomain));
% xlabel('Freq (Hz)')
% ylabel('Amplitude')
% title('Using the centeredFFT function')
% grid
% axis([-6,6,0,1.5])

[YfreqDomain,frequencyRange] = positiveFFT(y,Fs);
positiveFFT = figure;
stem(frequencyRange,abs(YfreqDomain));
set(positiveFFT,'Position',[500,500,500,300])
xlabel('Freq (Hz)')
ylabel('Amplitude')
title('Using the positiveFFT function')
grid
axis([0,20,0,1.5])

%%%centeredFFT.m
function [X,freq]=centeredFFT(x,Fs)
%this is a custom function that helps in plotting the two-sided spectrum
%x is the signal that is to be transformed
%Fs is the sampling rate

N=length(x);

%this part of the code generates that frequency axis
if mod(N,2)==0
k=-N/2:N/2-1; % N even
else
k=-(N-1)/2:(N-1)/2; % N odd
end
T=N/Fs;
freq=k/T; %the frequency axis

%takes the fft of the signal, and adjusts the amplitude accordingly
X=fft(x)/N; % normalize the data
X=fftshift(X); %shifts the fft data so that it is centered
--------------------------------------------------------------------------------------------------------------------------------

clc;clear;close all;
fs=30;  %采样频率
T=1/fs;
t=0:T:2*pi;
A=2;P=4;
y=A*square(P*t);
subplot(2,1,1),plot(t,y)
title('方波信号')
Fy=abs(fft(y,512));
f2=fs*(0:256)/512;
subplot(2,1,2),plot(f2,Fy(1:257))
title('频谱图');
set(gcf,'unit','normalized','position',[0 0 1 1]);
set(gca,'xtick',0:0.6:8);
axis([0,8,0 300]);
